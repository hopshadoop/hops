#
#   Licensed to the Apache Software Foundation (ASF) under one or more
#   contributor license agreements.  See the NOTICE file distributed with
#   this work for additional information regarding copyright ownership.
#   The ASF licenses this file to You under the Apache License, Version 2.0
#   (the "License"); you may not use this file except in compliance with
#   the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
# log4j configuration used during build and unit tests

#HOP adding RFA for writing the log to file for manipulation using grep/glark
# Define the root logger to the system property "hadoop.root.logger".
hadoop.root.logger=info,stdout,RFA
log4j.threshold=ALL
log4j.rootLogger=${hadoop.root.logger}
log4j.hadoop.root.logger=${hadoop.root.logger}

log4j.logger.org.apache.hadoop.hdfs.server.datanode.*=${hadoop.root.logger}
#log4j.logger.org.apache.hadoop.hdfs.StateChange=${hadoop.root.logger}
#log4j.additivity.org.apache.hadoop.hdfs.StateChange=false
#log4j.additivity.org.apache.hadoop.hdfs.BlockStateChange=false
#log4j.logger.org.apache.hadoop.hdfs.BlockStateChange=${hadoop.root.logger}

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

log4j.appender.stdout.layout.ConversionPattern= %d{HH:mm:ss,SSS} %5p [%t] [%F:%L] %x - %m%n
#log4j.appender.stdout.layout.ConversionPattern= %d{HH:mm:ss,SSS} %5p [%F:%L] %x - %m%n


log4j.appender.RFA=org.apache.log4j.FileAppender
log4j.appender.RFA.File=${hadoop.log.dir}/test.log
# Logfile size and and 30-day backups
log4j.appender.RFA.MaxFileSize=10MB
log4j.appender.RFA.MaxBackupIndex=30
log4j.appender.RFA.Append=false
log4j.appender.RFA.layout=org.apache.log4j.PatternLayout
log4j.appender.RFA.layout.ConversionPattern=  %d{HH:mm:ss,SSS} %5p [%t] (%F:%L)  %x - %m%n

#
# NameNode metrics logging.
# The default is to retain two namenode-metrics.log files up to 64MB each.
#
log4j.logger.NameNodeMetricsLog=INFO,NNMETRICSRFA
log4j.additivity.NameNodeMetricsLog=false
log4j.appender.NNMETRICSRFA=org.apache.log4j.RollingFileAppender
log4j.appender.NNMETRICSRFA.File=${hadoop.log.dir}/namenode-metrics.log
log4j.appender.NNMETRICSRFA.layout=org.apache.log4j.PatternLayout
log4j.appender.NNMETRICSRFA.layout.ConversionPattern=%d{ISO8601} %m%n
log4j.appender.NNMETRICSRFA.MaxBackupIndex=1
log4j.appender.NNMETRICSRFA.MaxFileSize=64MB

#
# DataNode metrics logging.
# The default is to retain two datanode-metrics.log files up to 64MB each.
#
log4j.logger.DataNodeMetricsLog=INFO,DNMETRICSRFA
log4j.additivity.DataNodeMetricsLog=false
log4j.appender.DNMETRICSRFA=org.apache.log4j.RollingFileAppender
log4j.appender.DNMETRICSRFA.File=${hadoop.log.dir}/datanode-metrics.log
log4j.appender.DNMETRICSRFA.layout=org.apache.log4j.PatternLayout
log4j.appender.DNMETRICSRFA.layout.ConversionPattern=%d{ISO8601} %m%n
log4j.appender.DNMETRICSRFA.MaxBackupIndex=1
log4j.appender.DNMETRICSRFA.MaxFileSize=64MB
