/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * These .proto interfaces are public and stable.
 * Please see http://wiki.apache.org/hadoop/Compatibility
 * for what changes are allowed for a *stable* .proto interface.
 */

option java_package = "org.apache.hadoop.yarn.proto";
option java_outer_classname = "ContainerManagementProtocol";
option java_generic_services = true;
option java_generate_equals_and_hash = true;
package hadoop.yarn;

import "yarn_protos.proto";
import "yarn_service_protos.proto";

service ContainerManagementProtocolService {
  rpc startContainers(StartContainersRequestProto) returns (StartContainersResponseProto);
  rpc stopContainers(StopContainersRequestProto) returns (StopContainersResponseProto);
  rpc getContainerStatuses(GetContainerStatusesRequestProto) returns (GetContainerStatusesResponseProto);
  rpc increaseContainersResource(IncreaseContainersResourceRequestProto) returns (IncreaseContainersResourceResponseProto);
  rpc updateContainer(ContainerUpdateRequestProto) returns (ContainerUpdateResponseProto);
  rpc signalToContainer(SignalContainerRequestProto) returns (SignalContainerResponseProto);
  rpc localize(ResourceLocalizationRequestProto) returns (ResourceLocalizationResponseProto);

  rpc reInitializeContainer(ReInitializeContainerRequestProto) returns (ReInitializeContainerResponseProto);
  rpc restartContainer(ContainerIdProto) returns (RestartContainerResponseProto);
  rpc rollbackLastReInitialization(ContainerIdProto) returns (RollbackResponseProto);
  rpc commitLastReInitialization(ContainerIdProto) returns (CommitResponseProto);
}
