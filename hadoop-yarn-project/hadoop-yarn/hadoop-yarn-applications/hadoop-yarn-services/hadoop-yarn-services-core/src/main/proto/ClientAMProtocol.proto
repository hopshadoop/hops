/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

option java_package = "org.apache.hadoop.yarn.proto";
option java_outer_classname = "ClientAMProtocol";
option java_generic_services = true;
option java_generate_equals_and_hash = true;
package hadoop.yarn;

service ClientAMProtocolService {
  rpc flexComponents(FlexComponentsRequestProto) returns (FlexComponentsResponseProto);
  rpc getStatus(GetStatusRequestProto) returns (GetStatusResponseProto);
  rpc stop(StopRequestProto) returns (StopResponseProto);
  rpc upgradeService(UpgradeServiceRequestProto)
    returns (UpgradeServiceResponseProto);
  rpc cancelUpgrade(CancelUpgradeRequestProto)
    returns (CancelUpgradeResponseProto);
  rpc restartService(RestartServiceRequestProto)
    returns (RestartServiceResponseProto);
  rpc upgrade(CompInstancesUpgradeRequestProto) returns
    (CompInstancesUpgradeResponseProto);
  rpc getCompInstances(GetCompInstancesRequestProto) returns
    (GetCompInstancesResponseProto);
}

message FlexComponentsRequestProto {
  repeated ComponentCountProto components = 1;
}

message ComponentCountProto {
  optional string name = 1;
  optional int64 numberOfContainers = 2;
}

message FlexComponentsResponseProto {
}

message GetStatusRequestProto {

}
message GetStatusResponseProto {
  optional string status = 1;
}

message StopRequestProto {

}

message StopResponseProto {

}

message UpgradeServiceRequestProto {
  optional string version = 1;
  optional bool autoFinalize = 2;
  optional bool expressUpgrade = 3;
}

message UpgradeServiceResponseProto {
  optional string error = 1;
}

message CancelUpgradeRequestProto {
}

message CancelUpgradeResponseProto {
}

message RestartServiceRequestProto {
}

message RestartServiceResponseProto {
}

message CompInstancesUpgradeRequestProto {
    repeated string containerIds = 1;
}

message CompInstancesUpgradeResponseProto {
}

message GetCompInstancesRequestProto {
  repeated string componentNames = 1;
  optional string version = 2;
  repeated string containerStates = 3;
}

message GetCompInstancesResponseProto {
  optional string compInstances = 1;
}