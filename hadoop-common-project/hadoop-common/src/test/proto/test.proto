/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

option java_package = "org.apache.hadoop.ipc.protobuf";
option java_outer_classname = "TestProtos";
option java_generate_equals_and_hash = true;
package hadoop.common;

message EmptyRequestProto {
}

message EmptyResponseProto {
}

message EchoRequestProto {
  required string message = 1;
}

message EchoResponseProto {
  required string message = 1;
}

message OptRequestProto {
  optional string message = 1;
}

message OptResponseProto {
  optional string message = 1;
}

message SleepRequestProto{
  required int32 milliSeconds = 1;
}

message SleepResponseProto{
}

message SlowPingRequestProto {
  required bool shouldSlow = 1;
}

message EchoRequestProto2 {
  repeated string message = 1;
}

message EchoResponseProto2 {
  repeated string message = 1;
}

message AddRequestProto {
  required int32 param1 = 1;
  required int32 param2 = 2;
}

message AddRequestProto2 {
  repeated int32 params = 1;
}

message AddResponseProto {
  required int32 result = 1;
}

message ExchangeRequestProto {
  repeated int32 values = 1;
}

message ExchangeResponseProto {
  repeated int32 values = 1;
}

message AuthMethodResponseProto {
  required int32 code = 1;
  required string mechanismName = 2;
}

message UserResponseProto {
  required string user = 1;
}

message SleepRequestProto2 {
  optional int64 sleep_time = 1;
}

message SleepResponseProto2 {
  optional int64 receive_time = 1;
  optional int64 response_time = 2;
}
